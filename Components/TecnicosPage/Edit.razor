@page "/Tecnico/Edit/{TecnicoId:int}"
@inject TecnicoService tecnicoService
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

@*Validacio al guardar*@
<EditForm Model="Tecnico" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header bg-warning text-center">
            <h1>Editar T&eacute;cnico</h1>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <label>ID:</label>
                    <div class="input-group">
                        <InputNumber min="0" @bind-Value="Tecnico.TecnicoID" class="form-control" READONLY></InputNumber>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md">
                    <label>Nombre:</label>
                    <InputText @bind-Value="Tecnico.Nombres" class="form-control"></InputText>
                    <ValidationMessage For="@(() => Tecnico.Nombres)" />
                </div>
            </div>
            <div class="row">
                <div class="col-md">
                    <label>Sueldo Hora:</label>
                    <InputNumber @bind-Value="Tecnico.SueldoHora" class="form-control"></InputNumber>
                    <ValidationMessage For="@(() => Tecnico.SueldoHora)" />
                </div>
            </div>
            </div>
            <br />
            <div class="card-footer text-center">
                <button type="submit" class="btn btn-success">Modificar <i class="bi bi-floppy-fill" /></button>
                <button type="button" class="btn btn-outline-primary" @onclick="Volver">Volver <i class="bi bi-arrow-return-left" /></button>
            </div>
        </div>
    <Toasts class="p-5" Messages="Mensaje" Placement="ToastsPlacement.TopRight" />
</EditForm>

@code {
    [Parameter]
    public int TecnicoID { get; set; }
    public Tecnico Tecnico { get; set; } = new Tecnico();

    protected override async Task OnInitializedAsync()
    {
        Tecnico = await tecnicoService.Buscar(Tecnico.TecnicoID);
    }
 
    public async Task<bool> Validar()
    {
        var HayTecnico = await tecnicoService.Existe(Tecnico.TecnicoID, Tecnico.Nombres);
        return !HayTecnico;
    }
    public async Task Modificar()
    {
        if (!await Validar())
        {
            return;
        }
        var guardo = await tecnicoService.Guardar(Tecnico);
        if (guardo)
        {
        
            await Volver();
        }
            
    }
    public Task Volver()
    {
        NavigationManager.NavigateTo("/Tecnico/Index");
        return Task.CompletedTask;
    }
}
   